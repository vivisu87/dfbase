<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.dfbase.mapper.SysPostionUserMapper" >
  <resultMap id="BaseResultMap" type="org.dfbase.entity.SysPostionUser" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="COM_ID" property="comId" jdbcType="BIGINT" />
    <result column="DEP_ID" property="depId" jdbcType="BIGINT" />
    <result column="POS_ID" property="posId" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="JOB_NUMBER" property="jobNumber" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="BIGINT" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="BIGINT" />
    <result column="DEL_FLAG" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, COM_ID, DEP_ID, POS_ID, USER_ID, JOB_NUMBER, REMARKS, CREATE_DATE, UPDATE_DATE, 
    CREATE_BY, UPDATE_BY, DEL_FLAG
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_postion_user
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_postion_user
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.dfbase.entity.SysPostionUser" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_postion_user (COM_ID, DEP_ID, POS_ID, 
      USER_ID, JOB_NUMBER, REMARKS, 
      CREATE_DATE, UPDATE_DATE, CREATE_BY, 
      UPDATE_BY, DEL_FLAG)
    values (#{comId,jdbcType=BIGINT}, #{depId,jdbcType=BIGINT}, #{posId,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{jobNumber,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=BIGINT}, #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.dfbase.entity.SysPostionUser" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_postion_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        COM_ID,
      </if>
      <if test="depId != null" >
        DEP_ID,
      </if>
      <if test="posId != null" >
        POS_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="jobNumber != null" >
        JOB_NUMBER,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="delFlag != null" >
        DEL_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        #{comId,jdbcType=BIGINT},
      </if>
      <if test="depId != null" >
        #{depId,jdbcType=BIGINT},
      </if>
      <if test="posId != null" >
        #{posId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="jobNumber != null" >
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.dfbase.entity.SysPostionUser" >
    update sys_postion_user
    <set >
      <if test="comId != null" >
        COM_ID = #{comId,jdbcType=BIGINT},
      </if>
      <if test="depId != null" >
        DEP_ID = #{depId,jdbcType=BIGINT},
      </if>
      <if test="posId != null" >
        POS_ID = #{posId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="jobNumber != null" >
        JOB_NUMBER = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        DEL_FLAG = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.dfbase.entity.SysPostionUser" >
    update sys_postion_user
    set COM_ID = #{comId,jdbcType=BIGINT},
      DEP_ID = #{depId,jdbcType=BIGINT},
      POS_ID = #{posId,jdbcType=BIGINT},
      USER_ID = #{userId,jdbcType=BIGINT},
      JOB_NUMBER = #{jobNumber,jdbcType=VARCHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=BIGINT},
      UPDATE_BY = #{updateBy,jdbcType=BIGINT},
      DEL_FLAG = #{delFlag,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>